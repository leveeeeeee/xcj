-- phpMyAdmin SQL Dump
-- version 4.9.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3308
-- Generation Time: May 19, 2024 at 08:10 AM
-- Server version: 8.0.18
-- PHP Version: 7.3.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `math`
--

-- --------------------------------------------------------

--
-- Table structure for table `example`
--

DROP TABLE IF EXISTS `example`;
CREATE TABLE IF NOT EXISTS `example` (
  `Math_ID` varchar(255) NOT NULL,
  `example1` varchar(10000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  PRIMARY KEY (`Math_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `example`
--

INSERT INTO `example` (`Math_ID`, `example1`) VALUES
('J01', '【例题】因式分解x²-4y²\r\n【解答】使用平方差公式，我们可以直接写出因式分解的结果： x^2-4y^2=(x+2y)(x−2y)'),
('J02', '【例题】计算：(x+2)(x-3)\r\n【解答】:(x+2)(x-3)=x^2-3x+2x-6=x^2-x-6'),
('J03', '【例题】展开x^2-4\r\n【解答】：x^2-4=(x+2)(x-2)'),
('P01', '【例题】100以内的质数有：\r\n【解答】2、3、5、7、11、13、17、19、23、29、31、37、41、43、47、53、59、61、67、71、73、79、83、89、97。'),
('P02', '【例题】计算 (2 + 3) + 4 和 2 + (3 + 4)，并验证它们是否相等。\r\n【解答】计算 (2 + 3) + 4：计算括号内的和，即 2 + 3 = 5，将第一步的结果与4相加，即 5 + 4 = 9。\r\n计算 2 + (3 + 4)：计算括号内的和，即 3 + 4 = 7，将2与第一步的结果相加，即 2 + 7 = 9。'),
('P03', '【例题】如果一个长方形的长是5厘米，宽是3厘米，那么它的周长就是：\r\n【解答】周长 = 2 × (5厘米 + 3厘米) = 2 × 8厘米 = 16厘米'),
('P04', '【例题】如果一个长方形的长是5厘米，宽是3厘米，那么它的面积就是：\r\n【解答】面积 = 5厘米 × 3厘米 = 15平方厘米'),
('P05', '【例题】在三角形ABC中，已知∠A = 50°，∠B = 70°，求∠C的度数。\r\n【解答】∠A + ∠B + ∠C = 180°。将已知的∠A和∠B的度数代入方程，得到：50° + 70° + ∠C = 180°。解这个方程，得到：∠C = 180° - 50° - 70° = 60°。'),
('P06', '【例题】比较0.25和0.27。\r\n【解答】首先，整数部分都是0，所以转向小数部分进行比较。从小数点后第一位开始，都是2，所以继续比较下一位。接下来是百分位，一个是5，一个是7，因为5小于7，所以0.25小于0.27。'),
('S01', '【例题】判断函数 f(x)=x^2在区间 [0,+∞) 上是否单调递增。\r\n【解答】定义法：定义法：任取 x_1,x_2∈[0,+∞) 且 x_1<x_2。\r\n计算 f(x_1)−f(x_2)=x_1^2−x_2^2=(x_1−x_2)(x_1+x_2)。由于 x_1<x_2 ，则 x_1−x_2<0；又因为 x_1,x_2≥0，则 x_1+x_2≥0。因此，f(x_1)−f(x_2)=(x_1−x_2)(x_1+x_2)≤0，即 f(x_1)≤f(x_2)。所以，函数 f(x)=x^2在区间 [0,+∞) 上单调递增。导数法（如果已知导数概念）:求 f(x)=x^2的导数，得 f′(x)=2x。在区间 [0,+∞) 上，f\'(x)=2x≥0（因为 x≥0）。所以，函数 f(x)=x^2在区间 [0,+∞) 上单调递增。'),
('S02', '【例题】判断函数 f(x)=x^2在区间 (-∞,0] 上是否单调递减。\r\n【解答】定义法：定义法：任取 x_1,x_2∈[0,+∞) 且 x_1<x_2。\r\n计算 f(x_1)−f(x_2)=x_1^2−x_2^2=(x_1−x_2)(x_1+x_2)。由于 x_1<x_2 ，则 x_1−x_2<0；又因为 x_1,x_2≤0，则 x_1+x_2≤0。因此，f(x_1)−f(x_2)=(x_1−x_2)(x_1+x_2)≥0，即 f(x_1)≥f(x_2)。所以，函数 f(x)=x^2在区间 (-∞,0] 上是否单调递减。'),
('S03', '【例题】使用对数换底公式计算 log(3,5)，其中 log(10,3)≈0.4771 和 log(10,5)=0.6989 是已知的。\r\n【解答】log(3,5)=log(10,5)/log(10,3)≈0.6989/0.4771≈1.4641'),
('U01', '【例题】求 lim (x → 0) sin(x)/x。\r\n【解答】当 x 趋近于 0 时，sin(x) 和 x 都趋近于 0。我们可以应用洛必达法则，对分子和分母分别求导：\r\nlim (x → 0) sin(x)/x = lim (x → 0) cos(x)/1 = cos(0) = 1\r\n注意：虽然洛必达法则在很多情况下都很有用，但它并不是万能的。在某些情况下，应用洛必达法则可能会使问题变得更加复杂，或者导致循环使用洛必达法则（即无法找到极限）。因此，在使用洛必达法则时，需要谨慎判断其适用性。'),
('U02', '【例题】求∫(0,1)x^2dx\r\n【解答】原式=F(1)-F(0)=1/3'),
('U03', '【例题】假设我们有一个函数 f(x)=x^3，并且我们想知道在区间 [1,2] 上是否存在一个点 c，使得该点的切线斜率等于函数在区间上的平均变化率。\r\n【解答】首先，我们计算函数在区间端点的值：\r\nf(1)=1^3=1,f(2)=2^3=8 然后，我们计算函数在区间上的平均变化率：(f(2)−f(1))/(2−1)=7 接下来，我们应用拉格朗日中值定理。由于 f(x)=x^3在 [1,2] 上连续且可导，根据拉格朗日中值定理，存在一个点 c∈(1,2)，使得\r\nf\'(c)=7由于 f\'(x)=3x^2，'),
('U04', '【例题】假设有两种疾病，疾病A和疾病B。某地区的人群中，患疾病A的概率为0.001（即1/1000），患疾病B的概率为0.01（即1/100）。如果一个人患有疾病A，那么他的检测呈阳性的概率为0.95。如果一个人患有疾病B，那么他的检测也呈阳性的概率为0.8。如果一个人没有这两种疾病中的任何一种，那么他的检测呈阳性的概率为0.01（即假阳性率为1%）。\r\n现在，假设该地区随机选取一个人进行检测，并且这个人的检测呈阳性。我们需要计算这个人真正患有疾病A的概率。\r\n【解答】\r\n设以下事件为：\r\nA：一个人患有疾病A\r\nB：一个人患有疾病B\r\n¬A：一个人不患有疾病A\r\n¬B：一个人不患有疾病B\r\nD：一个人的检测呈阳性\r\n已知概率如下：\r\nP(A) = 0.001\r\nP(B) = 0.01\r\nP(D|A) = 0.95\r\nP(D|B) = 0.8\r\nP(D|¬A ∩ ¬B) = 0.01\r\n由于A和B是互斥事件（一个人不能同时患有两种疾病），所以 P(A∩B) = 0。\r\n另外，我们知道一个人要么患有疾病A，要么患有疾病B，要么两种都不患，所以 P(A∪B∪(¬A∩¬B)) = 1。\r\n我们可以使用全概率公式来计算一个人检测呈阳性的总概率 P(D)：\r\nP(D) = P(A)P(D|A) + P(B)P(D|B) + P(¬A∩¬B)P(D|¬A∩¬B)\r\n其中 P(¬A∩¬B) = 1 - P(A∪B) = 1 - (P(A) + P(B)) = 1 - (0.001 + 0.01) = 0.989\r\n代入已知值，我们得到：\r\nP(D) = 0.001 × 0.95 + 0.01 × 0.8 + 0.989 × 0.01\r\n现在我们可以使用贝叶斯公式来计算一个人真正患有疾病A的概率，即 P(A|D)：\r\nP(A|D) = (P(A)P(D|A)) / P(D)\r\n代入已知值和上面计算得到的 P(D)，我们可以得到 P(A|D) 的值。'),
('U05', '【例题】假设一个射手射击目标的命中率为0.6（即每次射击命中的概率为0.6），他连续射击10次。计算他恰好命中5次的概率。\r\n【解答】C(10,5)0.6^5(1-0.6)^(10-5)=0.205'),
('U06', '【例题】研究鸟巢栖息地，1000米内观测有30个鸟巢，试问：在200米内发现2个鸟巢的概率？\r\n【解答】μ=λt=30/每1000米=6/每200米\r\nF(X=2)=（λt）^x e^(-λt)/x!=6^(2)*e^(-6)/2!=0.0446');

-- --------------------------------------------------------

--
-- Table structure for table `scope`
--

DROP TABLE IF EXISTS `scope`;
CREATE TABLE IF NOT EXISTS `scope` (
  `Math_ID` varchar(255) NOT NULL,
  `mathKnowledge` varchar(255) NOT NULL,
  `mathLevel` varchar(255) NOT NULL,
  PRIMARY KEY (`Math_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `scope`
--

INSERT INTO `scope` (`Math_ID`, `mathKnowledge`, `mathLevel`) VALUES
('J01', '乘法', '初中'),
('J02', '乘法', '初中'),
('J03', '乘法', '初中'),
('J04', '乘法', '初中'),
('J05', '二次根式', '初中'),
('J06', '多边形', '初中'),
('P01', '质数', '小学'),
('P02', '加法运算定律', '小学'),
('P03', '几何形体的公式', '小学'),
('P04', '几何形体的公式', '小学'),
('P05', '几何形体的公式', '小学'),
('P06', '小数', '小学'),
('S01', '函数的单调性', '高中'),
('S02', '函数的单调性', '高中'),
('S03', '对数函数', '高中'),
('S04', '函数的奇偶性', '高中'),
('S05', '排列组合', '高中'),
('S06', '数列求和', '高中'),
('U01', '微积分', '大学'),
('U02', '微积分', '大学'),
('U03', '微积分', '大学'),
('U04', '概率统计', '大学'),
('U05', '概率统计', '大学'),
('U06', '概率统计', '大学');

-- --------------------------------------------------------

--
-- Table structure for table `theorem`
--

DROP TABLE IF EXISTS `theorem`;
CREATE TABLE IF NOT EXISTS `theorem` (
  `Math_ID` varchar(255) NOT NULL,
  `mathName` varchar(255) NOT NULL,
  `mathTheorem` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `mathFormula` varchar(255) NOT NULL,
  PRIMARY KEY (`Math_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `theorem`
--

INSERT INTO `theorem` (`Math_ID`, `mathName`, `mathTheorem`, `mathFormula`) VALUES
('J01', '平方差公式', '两个数的和与两个数的差的积，等于这两个数的平方差。', '(a+b)(a-b)=a^2-b^2'),
('J02', '多项式相乘', '多项式与多项式相乘，先用一个多项式的每一项乘另一个多项式的每一项，再把所得的积相加。', '(a+b)(p+q)=a(p+q)+b(p+q)'),
('J03', '因式分解', '因式分解是将一个多项式表示为几个整式的乘积的形式。', 'a^2-b^2=(a+b)(a-b)'),
('J04', '三项立方和公式', '三项立方和公式（也称为完全立方和公式）是一个代数恒等式，它表示三个数的立方和可以表示为这三个数的和与这三个数两两乘积的和的某种组合。', 'a^3+b^3+c^3=(a+b+c)(a^2+b^2+c^2−ab−bc−ac)'),
('J05', '二次根式的乘法', '二次根式的乘法是基于根式的乘法法则进行的。具体地说，当两个二次根式相乘时，它们的被开方数相乘，而根指数保持不变。注意：在进行二次根式的乘法时，要确保被开方数是非负的。如果两个根式的被开方数可以化简（例如，有公因数），那么最好先化简再进行乘法运算。', '√a×√b=√(a×b)\r\n​（a≥0，b≥0）\r\n'),
('J06', 'n边形内角和公式', '(n-2)*180°其中，S 是 n 边形的内角和，n 是多边形的边数。这个公式可以通过将多边形划分为多个三角形来推导。具体来说，从一个顶点出发，可以画出 n−3 条对角线，将多边形划分为 n−2 个三角形。由于每个三角形的内角和为 180°，所以 n 边形的内角和就是 (n−2)×180°', '(n-2)*180°'),
('P01', '质数（素数）', '一个数，如果只有1和它本身两个约数，这样的数叫做质数（或素数）。', ''),
('P02', '加法结合律', '三个数相加，先把前两个数相加，再加上第三个数；或者先把后两个数相加，再和第一个数相加它。', ''),
('P03', '长方形周长公式', '长方形的周长公式是用于计算长方形四条边总长度的数学公式。因为长方形的对边是相等的，所以我们可以简单地用长和宽的两倍来得到周长。具体地，长方形的周长公式为：周长 = 2 × (长 + 宽)。', 'C=2(a+b)'),
('P04', '长方形面积公式', '长方形的面积是其长乘以宽的结果。具体地，长方形的面积公式为：面积 = 长 × 宽。', 'S=ab'),
('P05', '三角形内角和公式', '三角形内角和定理：三角形的内角和等于180°。  ', '在△ABC中，∠1+∠2+∠3=180°'),
('P06', '小数的大小比较', '指在给定的两个或多个小数之间，判断它们之间的大小关系。在进行小数大小比较时，一般遵循以下规则：\r\n整数部分比较：首先比较小数点前的整数部分，整数部分大的小数则大，反之亦然。\r\n小数部分比较：如果整数部分相同，则比较小数点后的部分。从小数点后第一位开始比较，依次向后比较，直到找到大小不同的一位为止。如果某一位上的数字相同，就继续比较下一位，直到找到大小关系为止。\r\n特殊情况的处理：当两个小数的小数点后位数不同时，可以通过补零的方式使它们的小数点后位数相同，然后再进行比较。', ''),
('S01', '单调递增', '设函数f(x)的定义域为I ,区间D是I的真子集。如果任意x1,x2∈D,当x1 < x2时, 都有 f(x1) < f(x2),那么就称函数f(x)在区间D上单调递增。', ''),
('S02', '单调递减', '设函数f(x)的定义域为I ,区间D是I的真子集。如果任意x1,x2∈D,当x1>x2时, 都有 f(x1) > f(x2),那么就称函数f(x)在区间D上单调递减。', ''),
('S03', '对数换底公式', '对数换底公式是用于将一个对数的底数从一个值转换为另一个值的公式。具体地，如果 a>0，a≠1，b>0，b≠1，N>0，那么有：log(a,b)=log(c,b)/log(c,a)。', 'log(a,b)=log(c,b)/log(c,a)\r\n'),
('S04', '奇函数', '奇函数是数学中一类特殊的函数，它们满足特定的性质。具体来说，如果一个函数f(x)的定义域关于原点对称（即对于定义域中的任意x，−x也在定义域中），并且对于定义域中的任意x，都有f(−x)=−f(x)，那么我们就称函数f(x)为奇函数。\r\n奇函数有以下几个重要的性质：\r\n图像关于原点对称：奇函数的图像关于原点(0,0)对称。也就是说，如果点(x,y)在奇函数的图像上，那么点(−x,−y)也一定在图像上。\r\n原点处的函数值：对于奇函数，f(0)=0（如果0在定义域内）。这是因为f(0)=f(−0)=−f(0)，所以f(0)=0。\r\n奇函数与偶函数的乘积：奇函数与偶函数的乘积是奇函数。\r\n奇函数与奇函数的乘积：奇函数与奇函数的乘积是偶函数。\r\n奇函数与奇函数的和或差：奇函数与奇函数的和或差仍然是奇函数。\r\n奇函数的导数：奇函数的导数是偶函数（在其定义域内）。\r\n奇函数的积分：奇函数在一个关于原点对称的区间上的定积分为零。', 'f(−x)=−f(x)'),
('S05', '排列数公式', '排列数公式是用来计算从n个不同元素中取出m（m≤n，m和n都是自然数,下同）个元素的所有排列的个数的。', 'A(n,m)=n*(n−1)*(n−2)*⋯*(n−m+1)或A(n,m)=n!/(n−m)!\r\n'),
('S06', '等差数列求和公式', '等差数列前n项和公式（基本公式）：\r\n如果等差数列的首项为a_1，公差为d，项数为n，则其前n项和Sn为:Sn=n/2*(2a_1+(n-1)d)或Sn=na_1+(n(n-1)d)/2', 'Sn=(n/2)*(2a_1+(n-1)d)或Sn=na_1+(n(n-1)d)/2'),
('U01', '洛必达法则', '洛必达法则（L\'Hôpital\'s Rule）是微积分中的一个重要定理，用于求解某些特定类型的极限问题，特别是当分子和分母都趋于零或无穷大时的极限。洛必达法则的基本形式如下：\r\n如果函数 f(x) 和 g(x) 满足以下条件:当 x 趋近于某个值 a（a 可以是实数、正无穷或负无穷）时，lim f(x) = 0 和 lim g(x) = 0（或 lim f(x) = ∞ 和 lim g(x) = ∞）。在 a 的某个去心邻域内，f\'(x) 和 g\'(x) 都存在且 g\'(x) ≠ 0。lim f\'(x)/g\'(x) 存在（或为无穷大）.那么，lim f(x)/g(x) = lim f\'(x)/g\'(x)。', 'lim f(x)/g(x) = lim f\'(x)/g\'(x)'),
('U02', '牛顿-莱布尼茨公式（微积分基本定理）', '这个公式揭示了定积分与被积函数的原函数或者不定积分之间的联系。它的内容是一个连续函数在区间 [ a，b ] 上的定积分等于它的任意一个原函数在区间[ a，b ]上的增量。这个公式为定积分的计算提供了一个有效而简便的方法。', '∫(a,b)f(x)dx=F(b)−F(a)'),
('U03', '拉格朗日中值定理', '拉格朗日中值定理（Lagrange\'s Mean Value Theorem）是微积分中的一个基本定理，它描述了函数在某区间上的整体平均变化率与区间内某点的局部变化率之间的关系。如果函数 f(x) 在闭区间 [a,b] 上连续，在开区间 (a,b) 内可导，那么至少存在一个点 c∈(a,b)，使得f\'(c)= f(b)−f(a)/(b−a)\r\n', 'f\'(c)= f(b)−f(a)/(b−a)'),
('U04', '贝叶斯公式', '贝叶斯公式（也称为贝叶斯定理或贝叶斯法则）是由英国数学家托马斯·贝叶斯（Thomas Bayes）发展的一种描述两个条件概率之间关系的数学公式。这个公式在概率论和统计学中非常重要，因为它提供了一种基于新的证据或信息更新先验概率的方法。P(A|B) 表示在事件B发生的条件下，事件A发生的概率。这被称为A的后验概率。P(B|A) 表示在事件A发生的条件下，事件B发生的概率。这被称为B的后验概率。P(A) 和 P(B) 分别表示事件A和事件B的独立发生概率，也被称为先验概率或边缘概率。', 'P(A|B) = (P(B|A) * P(A)) / P(B)  '),
('U05', '二项分布公式', '二项分布（Binomial Distribution）是概率论中的一个重要分布，它描述了在n次独立的伯努利试验中成功的次数。每次试验只有两种可能的结果，通常称为“成功”和“失败”，并且每次试验成功的概率都是相同的。', 'P(X=k)=C(n,k)p^k(1−p)^(n−k),k=0,1,2,…,n'),
('U06', '泊松分布公式', '泊松分布（Poisson Distribution）是一种描述在固定时间间隔内或固定空间区域内发生随机事件次数的概率分布。这种分布通常用于描述稀有事件（即发生概率很小的事件）在大量重复试验中的发生次数。', 'P(X=k)= λ^k*e^−λ/k! ,k=0,1,2,…');

-- --------------------------------------------------------

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
  `User_ID` varchar(255) NOT NULL,
  `Username` varchar(2000) NOT NULL,
  `Password` varchar(2000) NOT NULL,
  `e-mail` varchar(2000) NOT NULL,
  PRIMARY KEY (`User_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- --------------------------------------------------------

--
-- Table structure for table `user_math_history`
--

DROP TABLE IF EXISTS `user_math_history`;
CREATE TABLE IF NOT EXISTS `user_math_history` (
  `User_ID` varchar(255) NOT NULL,
  `Math_ID` varchar(255) NOT NULL,
  PRIMARY KEY (`User_ID`,`Math_ID`),
  KEY `Math_ID` (`Math_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `example`
--
ALTER TABLE `example`
  ADD CONSTRAINT `example_ibfk_1` FOREIGN KEY (`Math_ID`) REFERENCES `theorem` (`Math_ID`);

--
-- Constraints for table `scope`
--
ALTER TABLE `scope`
  ADD CONSTRAINT `scope_ibfk_1` FOREIGN KEY (`Math_ID`) REFERENCES `theorem` (`Math_ID`);

--
-- Constraints for table `user_math_history`
--
ALTER TABLE `user_math_history`
  ADD CONSTRAINT `user_math_history_ibfk_1` FOREIGN KEY (`Math_ID`) REFERENCES `theorem` (`Math_ID`),
  ADD CONSTRAINT `user_math_history_ibfk_2` FOREIGN KEY (`User_ID`) REFERENCES `user` (`User_ID`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
